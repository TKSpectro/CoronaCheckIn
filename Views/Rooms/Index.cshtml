@model IEnumerable<Room>

<h1>@Localizer["All Rooms"]</h1>

<div>
    <div class="input-group mb-3">
        <input id="input-name-search" type="text" class="form-control" placeholder="@Localizer["Search by name..."]" aria-label="@Localizer["Search by name..."]">
        <button class="btn btn-outline-secondary" type="button" onclick="searchName(this)">@SharedLocalizer["Search"]</button>
    </div>
    
    <div class="input-group mb-3">
        <label class="input-group-text" for="faculty-filter-switch">@Localizer["Filter by faculty"]</label>
        <select id="faculty-filter-switch" asp-items="Html.GetEnumSelectList<Faculty>()" onchange="filterFaculty(this)" class="form-select" style="max-width: 128px">
            <option value="-1">@SharedLocalizer["All"]</option>
        </select>
    </div>
</div>

<table class="table table-hover" style="cursor: pointer;">
    <thead>
    <tr class="user-select-none">
        <th hidden scope="col">Id</th>
        <th scope="col" id="table-head-name" onclick="sortBy('name')">
            @SharedLocalizer["Name"]
            <i class="bi bi-dash-lg pe-1"></i>
        </th>
        <th scope="col" id="table-head-faculty" onclick="sortBy('faculty')">
            @SharedLocalizer["Faculty"]
            <i class="bi bi-dash-lg pe-1"></i>
        </th>
        <th scope="col" id="table-head-maxDuration" onclick="sortBy('maxDuration')">
            @SharedLocalizer["MaxDuration"]
            <i class="bi bi-dash-lg pe-1"></i>
        </th>
        <th scope="col" id="table-head-maxParticipants" onclick="sortBy('maxParticipants')">
            @SharedLocalizer["MaxParticipants"]
            <i class="bi bi-dash-lg pe-1"></i>
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var room in Model)
    {
        <tr>
            <th hidden scope="row">@room.Id</th>
            <td>@room.Name</td>
            <td>@room.Faculty</td>
            <td>@room.MaxDuration</td>
            <td>@room.MaxParticipants</td>
            @* <td> *@
            @*     <a type="submit" asp-action="Remove" asp-route-id="@room.Id" class="btn btn-primary"><i class="bi bi-trash"></i></a> *@
            @* </td> *@
        </tr>
    }
    </tbody>
</table>

@section Scripts {
    <script>
        let initialFacultySwitch = false;
        
        $(document).ready(function() {
            const params = new URLSearchParams(window.location.search);
            
            // Set faculty switch to filtered one
            const faculty = params.get('faculty') || '-1';
            
            $("#faculty-filter-switch").val(faculty).change();
            initialFacultySwitch = true;
            
            // Set name search to url query
            $("#input-name-search").val(params.get('name'));
            
            // Setup sorting of table heads
            const sortBy = params.get('sortBy');
            const sortOrder = params.get('sortOrder');
            
            // Place the correct icons beside the sorted table headings
            const heading = $(`#table-head-${sortBy} > i`);
            heading.removeClass('bi-dash-lg');
            heading.addClass(sortOrder === 'asc' ? 'bi-arrow-up' : 'bi-arrow-down');
        });
    
        function sortBy(key) {
            // https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams
            const params = new URLSearchParams(window.location.search);
            
            // Either get the sortOrder from the url or if null an empty string
            // And then just switch to the other one (default to asc)
            let sortOrder = params.get('sortOrder') || '';
            if (sortOrder === '' || sortOrder === 'desc'){
                sortOrder = 'asc';
            } else {
                sortOrder = 'desc';
            }
            
            const url = `/rooms?sortBy=${key}&sortOrder=${sortOrder}`
            
            window.location.replace(url);
        }
        
        function filterFaculty(dropdown) {
            if (initialFacultySwitch){
                const faculty = dropdown.options[dropdown.selectedIndex].value;
                
                const params = new URLSearchParams(window.location.search);
                
                if (faculty.toString() === '-1'){
                    params.delete('faculty');
                } else {
                    params.set('faculty', faculty);
                }
                
                window.location.search = params.toString();
            }
        }
        
        function searchName(){
            const searchString = $("#input-name-search").val();
            
            const params = new URLSearchParams(window.location.search);
            params.set('name', searchString);
            
            window.location.search = params.toString();
        }
    </script>
}