@model IEnumerable<Room>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers



<h1>@Localizer["All Rooms"]</h1>

<div>
    <div class="input-group mb-3">
        <input id="input-name-search" type="text" class="form-control" placeholder="@Localizer["Search by name..."]" aria-label="@Localizer["Search by name..."]">
        <button class="btn btn-outline-secondary" type="button" onclick="searchName(this)">@SharedLocalizer["Search"]</button><button id="modalBtn">Erstellen</button>
    </div>

    <div class="input-group mb-3">
        <label class="input-group-text" for="faculty-filter-switch">@Localizer["Filter by faculty"]</label>
        <select id="faculty-filter-switch" asp-items="Html.GetEnumSelectList<Faculty>()" onchange="filterFaculty(this)" class="form-select" style="max-width: 128px">
            <option value="-1">@SharedLocalizer["All"]</option>
        </select>
    </div>
</div>

<table class="table table-hover" style="cursor: pointer;">
    <thead>
    <tr class="user-select-none">
        <th hidden scope="col">Id</th>
        <th scope="col" id="table-head-name" onclick="sortBy('name')">
            @SharedLocalizer["Name"]
            <i class="bi bi-dash-lg pe-1"></i>
        </th>
        <th scope="col" id="table-head-faculty" onclick="sortBy('faculty')">
            @SharedLocalizer["Faculty"]
            <i class="bi bi-dash-lg pe-1"></i>
        </th>
        <th scope="col" id="table-head-maxDuration" onclick="sortBy('maxDuration')">
            @SharedLocalizer["MaxDuration"]
            <i class="bi bi-dash-lg pe-1"></i>
        </th>
        <th scope="col" id="table-head-maxParticipants" onclick="sortBy('maxParticipants')">
            @SharedLocalizer["MaxParticipants"]
            <i class="bi bi-dash-lg pe-1"></i>
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var room in Model)
    {
        <tr onclick="getRoomModal('@room.Id')">
            <th hidden  scope="row">@room.Id</th>
            <td>@room.Name</td>
            <td>@room.Faculty</td>
            <td>@room.MaxDuration</td>
            <td>@room.MaxParticipants</td>
            @* <td> *@
            @*     <a type="submit" asp-action="Remove" asp-route-id="@room.Id" class="btn btn-primary"><i class="bi bi-trash"></i></a> *@
            @* </td> *@
        </tr>
    }
    </tbody>
</table>


<form id="roomForm" data-ajax-method="POST">
    <div id="createRoomModal" class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4>@Localizer["RegistrationForm"]</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="formDetails">
                    <partial  id="detailsContent"  name="~/Views/Rooms/CreateRoom.cshtml" model="@ViewBag.newRoom"/>
                    @* <div id="detailsContent" class="container"></div> *@
                </div>
                <div class="modal-footer">
                    <input id="btnSubmit" type="submit" value="Submit" class="btn btn-primary" onclick="submitRoom()"/>
                    <button type="button" class="btn btn-secondary close" data-dismiss="modal">Close</button>
                    <button type="button" id="saveButton" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script>
        let initialFacultySwitch = false;
        
        $(document).ready(function() {
            const params = new URLSearchParams(window.location.search);
            
            // Set faculty switch to filtered one
            const faculty = params.get('faculty') || '-1';
            
            $("#faculty-filter-switch").val(faculty).change();
            initialFacultySwitch = true;
            
            // Set name search to url query
            $("#input-name-search").val(params.get('name'));
            
            // Setup sorting of table heads
            const sortBy = params.get('sortBy');
            const sortOrder = params.get('sortOrder');
            
            // Place the correct icons beside the sorted table headings
            const heading = $(`#table-head-${sortBy} > i`);
            heading.removeClass('bi-dash-lg');
            heading.addClass(sortOrder === 'asc' ? 'bi-arrow-up' : 'bi-arrow-down');
        });
    
        function sortBy(key) {
            // https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams
            const params = new URLSearchParams(window.location.search);
            
            // Either get the sortOrder from the url or if null an empty string
            // And then just switch to the other one (default to asc)
            let sortOrder = params.get('sortOrder') || '';
            if (sortOrder === '' || sortOrder === 'desc'){
                sortOrder = 'asc';
            } else {
                sortOrder = 'desc';
            }
            
            const url = `/rooms?sortBy=${key}&sortOrder=${sortOrder}`
            
            window.location.replace(url);
        }
        
        function filterFaculty(dropdown) {
            if (initialFacultySwitch){
                const faculty = dropdown.options[dropdown.selectedIndex].value;
                
                const params = new URLSearchParams(window.location.search);
                
                if (faculty.toString() === '-1'){
                    params.delete('faculty');
                } else {
                    params.set('faculty', faculty);
                }
                
                window.location.search = params.toString();
            }
        }
        
        function searchName(){
            const searchString = $("#input-name-search").val();
            
            const params = new URLSearchParams(window.location.search);
            params.set('name', searchString);
            
            window.location.search = params.toString();
        }
        
        function getRoomModal(room){
          
            console.log('roomId', room);
            
                   $.ajax({
                            url: "/rooms/CreateRoom",
                            method: "GET",
                            data: {"roomId": room},
                            success: function (result) {
                                console.log('result', result);
                                
                                 $("#createRoomModal").modal("show");
                                 
                                 let modalBody = $("#formDetails")[0];
                                 let children = modalBody.children[1];
                                console.log('children', children);
                                let name = children.children[1].children[0];
                                name.value= result.name;
                                
                                let maxParticipants= children.children[3].children[0];
                                maxParticipants.value= result.maxParticipants;
                            
                                 let maxDuration= children.children[5].children[0];
                                    maxDuration.value= result.maxDuration;
                                    
                                    let faculty= children.children[7].children[0];
                                        faculty.selectedIndex= result.faculty;
                            }
                        });

        }
        
        // Modal 
        $("#modalBtn").click(function () {
            $("#createRoomModal").modal("show");
                   // $.ajax({
                   //          url: "/rooms/CreateRoom/",
                   //          method: "GET",
                   //          success: function (result) {
                   //              console.log('result get', $("#detailsContent").html(result));
                   //              $("#detailsContent").html(result);
                   //          }
                   //      });
        });

        $('[data-dismiss="modal"]').each(function () {
            $(this).click(function () {
                $("#createRoomModal").modal("hide");
            });
        });

        $("#saveButton").click(function () {
            alert("Saved");
            $("#createRoomModal").modal("hide");
        });
     
  
 
         function submitRoom() {
             console.log('valid',$("#roomForm").valid());
      
             if ($("#roomForm").valid()){
             $('#roomForm').on('submit', function(e){
                   e.preventDefault();
                        let dataForm = $("#roomForm").serialize();
                              console.log('data', dataForm);
    
                              $.ajax({
                                  type: 'POST',
                                  url: '/rooms/CreateRoom',
                                  contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                  data: dataForm,
                                  success: function (result) {
                                      console.log('Successfully received Data ');
                                      console.log('result', result);
                                  },
                                  error: function () {
                                      console.log('Failed to receive the Data');
                                      console.log('error','Failed ');
                                  }
                              })
               });
            }
          
           }
         
    </script>
}